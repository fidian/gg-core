#!/usr/bin/env bash
# Starts jobs from the parallelizeJobs array (removing them once started)
# and adds the pids to parallelizeJobPids array.  Once the number of jobs
# running matches parallelizeProcessMax, no more jobs will be added.
#
# Returns nothing.
parallelizeRunJobs() {
    local job oldIfs

    # Don't redeclare variables so we can keep their data around
    # shellcheck disable=SC2154
    while [[ "${#parallelizeJobs[@]}" -gt 0 && "${#parallelizeJobPids[@]}" -lt "$parallelizeProcessMax" ]]; do
        # Shift off the first job.
        job="${parallelizeJobs[0]}"

        # This requires IFS to either contain a space or be unset. There's
        # bug in bash prior to 4.0-rc1 that would convert the array into
        # a single string.
        oldIfs=$IFS
        IFS=
        parallelizeJobs=("${parallelizeJobs[@]:1}")
        IFS=$oldIfs

        # Start the job in a subshell so it is unable to affect the current
        # shell.
        (
            eval "$job"
        ) &
        
        # Save the pid.
        parallelizeJobPids[${#parallelizeJobPids[@]}]=$!
    done
}
